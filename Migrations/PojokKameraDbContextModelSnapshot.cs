// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pojokkamera_backend.Data;

#nullable disable

namespace pojokkamera_backend.Migrations
{
    [DbContext(typeof(PojokKameraDbContext))]
    partial class PojokKameraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("pojokkamera_backend.Models.Alamat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("AlamatUtama")
                        .HasColumnType("boolean");

                    b.Property<string>("DetailJalan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("IdPengguna")
                        .HasColumnType("bigint");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LabelAlamat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NamaPenerima")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdPengguna");

                    b.ToTable("Alamat");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.DetailPesanan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("HargaSaatPembelian")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("IdKamera")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLensa")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPesanan")
                        .HasColumnType("bigint");

                    b.Property<int>("Kuantitas")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdKamera");

                    b.HasIndex("IdLensa");

                    b.HasIndex("IdPesanan");

                    b.ToTable("Detail_Pesanan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Kamera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("IdKategori")
                        .HasColumnType("bigint");

                    b.Property<long>("IdMerek")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdMount")
                        .HasColumnType("bigint");

                    b.Property<int>("JumlahStok")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UrlGambar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdKategori");

                    b.HasIndex("IdMerek");

                    b.HasIndex("IdMount");

                    b.ToTable("Kamera");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.KategoriProduk", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("NamaKategori")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Kategori_Produk");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Lensa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BukaanMaksimal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("IdKategori")
                        .HasColumnType("bigint");

                    b.Property<long>("IdMerek")
                        .HasColumnType("bigint");

                    b.Property<long>("IdMount")
                        .HasColumnType("bigint");

                    b.Property<int>("JumlahStok")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PanjangFokusMaks")
                        .HasColumnType("integer");

                    b.Property<int>("PanjangFokusMin")
                        .HasColumnType("integer");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UrlGambar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdKategori");

                    b.HasIndex("IdMerek");

                    b.HasIndex("IdMount");

                    b.ToTable("Lensa");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Merek", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("NamaMerek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Merek");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Pengguna", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DibuatPada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("HashKataSandi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaLengkap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NamaPengguna")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Pengguna");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Pesanan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IdAlamatPengiriman")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPengguna")
                        .HasColumnType("bigint");

                    b.Property<decimal>("JumlahTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("TanggalPesanan")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IdAlamatPengiriman");

                    b.HasIndex("IdPengguna");

                    b.ToTable("Pesanan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.SpekKamera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IdKamera")
                        .HasColumnType("bigint");

                    b.Property<int>("JumlahTitikFokus")
                        .HasColumnType("integer");

                    b.Property<string>("Prosesor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("PunyaAutofocusSubjek")
                        .HasColumnType("boolean");

                    b.Property<string>("Resolusi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("TahunRilis")
                        .HasColumnType("integer");

                    b.Property<string>("TipeSensor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdKamera")
                        .IsUnique();

                    b.ToTable("Spek_Kamera");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.TipeMount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaMount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Tipe_Mount");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Ulasan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DibuatPada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("IdKamera")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLensa")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPengguna")
                        .HasColumnType("bigint");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Peringkat")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdKamera");

                    b.HasIndex("IdLensa");

                    b.HasIndex("IdPengguna");

                    b.ToTable("Ulasan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Alamat", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.Pengguna", "Pengguna")
                        .WithMany("Alamat")
                        .HasForeignKey("IdPengguna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pengguna");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.DetailPesanan", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.Kamera", "Kamera")
                        .WithMany("DetailPesanan")
                        .HasForeignKey("IdKamera");

                    b.HasOne("pojokkamera_backend.Models.Lensa", "Lensa")
                        .WithMany("DetailPesanan")
                        .HasForeignKey("IdLensa");

                    b.HasOne("pojokkamera_backend.Models.Pesanan", "Pesanan")
                        .WithMany("DetailPesanan")
                        .HasForeignKey("IdPesanan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kamera");

                    b.Navigation("Lensa");

                    b.Navigation("Pesanan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Kamera", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.KategoriProduk", "Kategori")
                        .WithMany("Kamera")
                        .HasForeignKey("IdKategori")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pojokkamera_backend.Models.Merek", "Merek")
                        .WithMany("Kamera")
                        .HasForeignKey("IdMerek")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pojokkamera_backend.Models.TipeMount", "TipeMount")
                        .WithMany("Kamera")
                        .HasForeignKey("IdMount");

                    b.Navigation("Kategori");

                    b.Navigation("Merek");

                    b.Navigation("TipeMount");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Lensa", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.KategoriProduk", "Kategori")
                        .WithMany("Lensa")
                        .HasForeignKey("IdKategori")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pojokkamera_backend.Models.Merek", "Merek")
                        .WithMany("Lensa")
                        .HasForeignKey("IdMerek")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pojokkamera_backend.Models.TipeMount", "TipeMount")
                        .WithMany("Lensa")
                        .HasForeignKey("IdMount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Merek");

                    b.Navigation("TipeMount");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Pesanan", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.Alamat", "AlamatPengiriman")
                        .WithMany()
                        .HasForeignKey("IdAlamatPengiriman")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pojokkamera_backend.Models.Pengguna", "Pengguna")
                        .WithMany("Pesanan")
                        .HasForeignKey("IdPengguna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlamatPengiriman");

                    b.Navigation("Pengguna");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.SpekKamera", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.Kamera", "Kamera")
                        .WithOne("SpekKamera")
                        .HasForeignKey("pojokkamera_backend.Models.SpekKamera", "IdKamera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kamera");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Ulasan", b =>
                {
                    b.HasOne("pojokkamera_backend.Models.Kamera", "Kamera")
                        .WithMany("Ulasan")
                        .HasForeignKey("IdKamera");

                    b.HasOne("pojokkamera_backend.Models.Lensa", "Lensa")
                        .WithMany("Ulasan")
                        .HasForeignKey("IdLensa");

                    b.HasOne("pojokkamera_backend.Models.Pengguna", "Pengguna")
                        .WithMany("Ulasan")
                        .HasForeignKey("IdPengguna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kamera");

                    b.Navigation("Lensa");

                    b.Navigation("Pengguna");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Kamera", b =>
                {
                    b.Navigation("DetailPesanan");

                    b.Navigation("SpekKamera");

                    b.Navigation("Ulasan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.KategoriProduk", b =>
                {
                    b.Navigation("Kamera");

                    b.Navigation("Lensa");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Lensa", b =>
                {
                    b.Navigation("DetailPesanan");

                    b.Navigation("Ulasan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Merek", b =>
                {
                    b.Navigation("Kamera");

                    b.Navigation("Lensa");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Pengguna", b =>
                {
                    b.Navigation("Alamat");

                    b.Navigation("Pesanan");

                    b.Navigation("Ulasan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.Pesanan", b =>
                {
                    b.Navigation("DetailPesanan");
                });

            modelBuilder.Entity("pojokkamera_backend.Models.TipeMount", b =>
                {
                    b.Navigation("Kamera");

                    b.Navigation("Lensa");
                });
#pragma warning restore 612, 618
        }
    }
}
